<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Constant values-->
    <!--Background and text colors-->
    <SolidColorBrush x:Key="BackDropColor" Color="#1A1A1A"/>
    <StaticResource ResourceKey="BackDropColor" x:Key="BackDropColorResource"/>
    <SolidColorBrush x:Key="MainTextColor" Color="#E2E3E7"/>
    <StaticResource ResourceKey="MainTextColor" x:Key="MainTextColorResource"/>
    <SolidColorBrush x:Key="SecondTextColor" Color="#000000"/>
    <StaticResource ResourceKey="SecondTextColor" x:Key="SecondTextColorResource"/>
    <!--Themes colors-->
    <SolidColorBrush x:Key="ThemeColor1" Color="#454648"/>
    <StaticResource ResourceKey="ThemeColor1" x:Key="ThemeColor1Resource"/>
    <SolidColorBrush x:Key="ThemeColor2" Color="#5E5F61"/>
    <StaticResource ResourceKey="ThemeColor2" x:Key="ThemeColor2Resource"/>
    <SolidColorBrush x:Key="ThemeColor3" Color="#9FA0A2"/>
    <StaticResource ResourceKey="ThemeColor3" x:Key="ThemeColor3Resource"/>
    <SolidColorBrush x:Key="ThemeColor4" Color="#91949B"/>
    <StaticResource ResourceKey="ThemeColor4" x:Key="ThemeColor4Resource"/>
    <SolidColorBrush x:Key="AccentColor" Color="#71ABEB"/>
    <StaticResource ResourceKey="AccentColor" x:Key="AccentColorResource"/>


    <SolidColorBrush x:Key="MainColor1" Color="Gray"/>
    <StaticResource ResourceKey="MainColor1" x:Key="MainColor1Resource"/>
    <SolidColorBrush x:Key="MainColor2" Color="Black"/>
    <StaticResource ResourceKey="MainColor2" x:Key="MainColor2Resource"/>
    <SolidColorBrush x:Key="AddyColor1" Color="DarkGray"/>
    <StaticResource ResourceKey="AddyColor1" x:Key="AddyColor1Resource"/>
    <SolidColorBrush x:Key="AddyColor2" Color="DarkBlue"/>
    <StaticResource ResourceKey="AddyColor2" x:Key="AddyColor2Resource"/>
    <!--Button style-->
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource AccentColorResource}"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="{StaticResource MainTextColorResource}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border MinHeight="50" MinWidth="100" CornerRadius="5" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TextBox style-->
    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource MainTextColorResource}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border CornerRadius="5" Padding="2" Background="{StaticResource ThemeColor1Resource}" BorderBrush="Black" BorderThickness="1">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                    </Border>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <!--PasswordBox style-->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Background" Value="{StaticResource ThemeColor1Resource}"/>
        <Setter Property="BorderBrush" Value="black"/>
        <Setter Property="Foreground" Value="{StaticResource MainTextColorResource}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" CornerRadius="5" Padding="2" Background="{StaticResource ThemeColor1Resource}" BorderBrush="Black" BorderThickness="1">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!--ListView style -->
    <Style TargetType="ListView">
        <Setter Property="Background" Value="{StaticResource ThemeColor1Resource}"/>
        <Setter Property="Foreground" Value="{StaticResource MainTextColorResource}"/>
    </Style>
    <Style TargetType="GridViewColumnHeader">
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{StaticResource AccentColorResource}">
                        <TextBlock x:Name="ContentHeader" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Foreground" Value="{StaticResource MainTextColorResource}"/>
        <Setter Property="Background" Value="{StaticResource ThemeColor1Resource}"/>
        
    </Style>
    
    <Style TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="border" CornerRadius="5" Padding="2" Background="{StaticResource AccentColorResource}" BorderBrush="Black" BorderThickness="1">
                        <GridViewRowPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            <Setter Property="Background" TargetName="border" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Pink"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            <Setter Property="Background" TargetName="border" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource MainTextColorResource}"/>
    </Style>
    <!--ListBox style-->
    <Style TargetType="ListBox">
        <Setter Property="Foreground" Value="{StaticResource MainTextColorResource}"/>
        <Setter Property="Background" Value="{StaticResource ThemeColor1Resource}"></Setter>
        
    </Style>

    <Style TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource BackDropColorResource}"></Setter>
    </Style>

    <!--ComboBox style-->
    <Style TargetType="ComboBox">
        <Style.Triggers>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>

    </Style>


    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{StaticResource ThemeColor1Resource}"/>
        <Setter Property="Foreground" Value="{StaticResource MainTextColorResource}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="ComboBoxItemBorder" Background="{StaticResource ThemeColor1Resource}" BorderBrush="Black" CornerRadius="1" Margin="1" BorderThickness="1">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="ComboBoxItemBorder" Value="{StaticResource ThemeColor2Resource}"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Label style-->
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource MainTextColorResource}"/>
    </Style>
    <!--TextBlock style-->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource MainTextColorResource}"/>
    </Style>
</ResourceDictionary>